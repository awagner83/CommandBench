#!/bin/env python
#------------------------------------------------------------------------#
# CommandBench - All-purpose command-line application benchmarking tool
# Copyright (C) 2009 Adam Wagner <awagner83@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#------------------------------------------------------------------------#

"""
CLI interface to CommandBench
"""

def main():
    
    from commandbench.process import Controller
    from commandbench import about
    from optparse import OptionParser
    
    # Parse command-line opts
    parser = OptionParser( 'Usage: %prog [options] "COMMAND" ["COMMAND_2"] .. ["COMMAND_N"]', 
            version=about.name + ' ' + about.version )
    parser.add_option('-n', '--number', dest='repetitions', type='int',
            help='number of times to repeat COMMAND (default: 1)', default=1)
    parser.add_option('-c', '--concurrency', type='int', default=1,
            help='maximum number of processes to run simultaneously (default: 1)')
    parser.add_option('-s', '--show', default='',
            help='Stats to output (eg: real,sys)')
    parser.add_option('-q', '--quiet', action='store_true', 
            help='Suppress intro and only output final benchmark data')
    options, commands = parser.parse_args()

    if len( commands ):
        # Create controller and execute
        Controller(commands, options.repetitions, options.concurrency,
                vars(options)).run()
    else:
        from commandbench.about import copyright_line
        print copyright_line, "\n"
        parser.print_help()


if __name__ == '__main__': main()

